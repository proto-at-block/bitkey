[profile.release]
# See profile defaults https://doc.rust-lang.org/cargo/reference/profiles.html#release
overflow-checks = true

[workspace]
exclude = ["auth/auth_lambda_handlers"]
members = [
  "src/api/account",
  "src/api/analytics",
  "src/api/authn_authz",
  "src/api/bdk_utils",
  "src/api/chain_indexer",
  "src/api/comms_verification",
  "src/api/customer_feedback",
  "src/api/database",
  "src/api/errors",
  "src/api/exchange_rate",
  "src/api/export_tools",
  "src/api/external_identifier",
  "src/api/http_server",
  "src/api/instrumentation",
  "src/api/linear",
  "src/api/mempool_indexer",
  "src/api/migration",
  "src/api/mobile_pay",
  "src/api/notification",
  "src/api/notification_validation",
  "src/api/onboarding",
  "src/api/partnerships",
  "src/api/partnerships/partnerships_lib/src/partners/cash_app/lambdas",
  "src/api/privileged_action",
  "src/api/promotion_code",
  "src/api/queue",
  "src/api/recovery",
  "src/api/repository",
  "src/api/s3_utils",
  "src/api/screener",
  "src/api/secure_site",
  "src/api/server",
  "src/api/transaction_verification",
  "src/api/types",
  "src/api/userpool",
  "src/api/workers",
  "src/feature_flags",
  "src/wallet-telemetry",
  "src/wsm/wsm-api",
  "src/wsm/wsm-common",
  "src/wsm/wsm-enclave",
  "src/wsm/wsm-rust-client",
]
resolver = "2"

[workspace.package]
edition = "2021"
publish = false
version = "0.1.0"

[workspace.dependencies]
anyhow = "1.0.80"
argon2 = { version = "0.5.3", features = ["std"] }
async-trait = "0.1.77"
aws-config = "=1.5.11"
aws-credential-types = "=1.2.1"
aws-sdk-dynamodb = "=1.56.0"
aws-sdk-secretsmanager = "1.17.0"
aws-sdk-sns = "1.16.0"
aws-sdk-sqs = "1.15.0"
aws-smithy-async = "=1.2.2"
aws-smithy-http = "0.60.6"
aws-smithy-types = "=1.2.10"
aws-types = "=1.3.3"
axum = "0.7.4"
axum-extra = { version = "0.9.2", features = ["typed-header"] }
axum-macros = "0.4.1"
axum-tracing-opentelemetry = "0.19.0"
base32 = "0.5.0"
base64 = "0.22.0"
bdk = { version = "0.29.0", default-features = false }
config = { version = "=0.15.0", features = ["toml"] }
crypto = { path = "../core/crypto" }
ctrlc = "3.4.4"
derive_builder = "=0.20.2"
dyn-clone = "1.0.17"
futures = "0.3.30"
hex = "0.4.3"
hmac = "0.12.1"
http = "=1.1.0"
isocountry = "0.3.2"
itertools = "0.13.0"
jwt-authorizer = { version = "0.15.0", default-features = false, features = [
  "rustls-tls",
] } # Manually audited: review source changes before updating version
launchdarkly-server-sdk = "=2.2.1"
mockall = "0.13.0"
once_cell = "1.19.0"
opentelemetry = "0.24.0"
prost = "0.13.0"
rand = "0.8.5"
regex = "1.10.6"
reqwest = { version = "=0.12.5", default-features = false, features = [
  "json",
  "rustls-tls",
] }
reqwest-middleware = { version = "=0.3.3", features = ["json"] }
reqwest-retry = "=0.6.0"
rstest = "0.23.0"
rust-embed = { version = "8.3.0", features = [
  "include-exclude",
  "interpolate-folder-path",
] }
serde = { version = "1.0.197", features = ["derive"] }
serde_dynamo = { version = "4.2.13", features = ["aws-sdk-dynamodb+1"] }
serde_json = "1.0.114"
serde_with = "3.9.0"
sha2 = "0.10.8"
strum = "0.26.3"
strum_macros = "0.26.4"
thiserror = "1.0.57"
time = { version = "0.3.36", features = [
  "formatting",
  "macros",
  "serde-human-readable",
  "serde-well-known",
] }
tokio = { version = "1.36.0", features = ["macros", "rt", "rt-multi-thread"] }
tower = "0.5.0"
tower-http = { version = "0.5.2", features = ["catch-panic"] }
tracing = "0.1.40"
trait-variant = "0.1.1"
ulid = { version = "1.1.2", features = ["serde", "uuid"] }
url = "2.5.2"
urlencoding = "2.1.3"
urn = { version = "0.7.0", features = ["serde"] }
utoipa = { version = "4.2.0", features = ["axum_extras"] }
utoipa-swagger-ui = { version = "6.0.0", features = ["axum"] }
wiremock = "=0.6.2"

account = { path = "src/api/account" }
analytics = { path = "src/api/analytics" }
authn_authz = { path = "src/api/authn_authz" }
bdk_utils = { path = "src/api/bdk_utils" }
chain_indexer = { path = "src/api/chain_indexer" }
comms_verification = { path = "src/api/comms_verification" }
customer_feedback = { path = "src/api/customer_feedback" }
database = { path = "src/api/database" }
errors = { path = "src/api/errors" }
exchange_rate = { path = "src/api/exchange_rate" }
experimentation = { path = "src/api/experimentation" }
export_tools = { path = "src/api/export_tools" }
external_identifier = { path = "src/api/external_identifier" }
feature_flags = { path = "src/feature_flags" }
http_server = { path = "src/api/http_server" }
instrumentation = { path = "src/api/instrumentation" }
linear = { path = "src/api/linear" }
mempool_indexer = { path = "src/api/mempool_indexer" }
migration = { path = "src/api/migration" }
mobile_pay = { path = "src/api/mobile_pay" }
notification = { path = "src/api/notification" }
notification_validation = { path = "src/api/notification_validation" }
onboarding = { path = "src/api/onboarding" }
partnerships = { path = "src/api/partnerships" }
privileged_action = { path = "src/api/privileged_action" }
promotion_code = { path = "src/api/promotion_code" }
queue = { path = "src/api/queue" }
recovery = { path = "src/api/recovery" }
repository = { path = "src/api/repository" }
s3-utils = { path = "src/api/s3_utils" }
screener = { path = "src/api/screener" }
secure_site = { path = "src/api/secure_site" }
transaction_verification = { path = "src/api/transaction_verification" }
types = { path = "src/api/types" }
userpool = { path = "src/api/userpool" }
wallet-telemetry = { path = "src/wallet-telemetry" }
workers = { path = "src/api/workers" }
wsm-common = { path = "src/wsm/wsm-common" }
wsm-rust-client = { path = "src/wsm/wsm-rust-client" }

[patch.crates-io]
base32 = { path = "vendor/base32" }
isocountry = { path = "vendor/isocountry" }
urlencoding = { path = "vendor/urlencoding" }
urn = { path = "vendor/urn" }

[workspace.lints.rust]
unsafe_code = "forbid"

[workspace.lints.clippy]
dbg_macro = "warn"
print_stderr = "warn"
print_stdout = "warn"
todo = "warn"
unimplemented = "warn"
