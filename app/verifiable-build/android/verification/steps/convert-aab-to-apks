#!/bin/bash

# Converts locally built AAB to a set of APKs based on the provided device specification or connected Android device.

if [ "$#" -lt 2 ] || [ "$#" -gt 3 ]; then
    echo "Usage: $0 <path-to-aab> <path-to-output-directory> [path-to-device-spec.json]" >&2
    exit 1
fi

if [ ! -f "$1" ] || [[ $1 != *.aab ]]; then
    echo "$1 is not an AAB"
    echo "Usage: $0 <path-to-aab> <path-to-output-directory> [path-to-device-spec.json]" >&2
    exit 2
fi

if [ -e "$2" ]; then
  echo "Provided output directory '$2' already exists. Please delete it before running the script again." >&2
  exit 3
fi

if [ -z "$BUNDLETOOL" ]; then
    echo "Cannot find 'bundletool' (https://developer.android.com/tools/bundletool). Please install it first and then rerun this command." >&2
    echo "Note that 'bundletool' is distributed as a jar so it cannot be added to \$PATH directly." >&2
    echo "Instead, install Java and download the 'bundletool' jar." >&2
    echo "Then, put the 'bundletool' jar path into the 'BUNDLETOOL' environment variable." >&2
    exit 100
fi

if ! which "java" > /dev/null 2>&1; then
    echo "Cannot find 'java'. Please install it first and then rerun this command." >&2
    exit 100
fi

if ! which "unzip" > /dev/null 2>&1; then
    echo "Cannot find 'unzip'. Please install it first and then rerun this command." >&2
    exit 100
fi

mkdir -p "$2"
mkdir -p "$2/tmp"

if [ -n "$3" ]; then
    if [ ! -f "$3" ]; then
        echo "Specified device-spec.json file does not exist." >&2
        exit 4
    fi
    java -jar "$BUNDLETOOL" build-apks --device-spec="$3" --bundle="$1" --output="$2/tmp/apks.apks" || exit $?
else
    java -jar "$BUNDLETOOL" build-apks --connected-device --bundle="$1" --output="$2/tmp/apks.apks" || exit $?
fi

unzip "$2/tmp/apks.apks" -d "$2/tmp"
find "$2/tmp" -type f -name "*.apk" -exec mv {} "$2" \;
rm -rf "$2/tmp"
