# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Edit `local.properties` if you want to make local configuration overrides
#
# This file contains the default configuration for all contributors.
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

# MaxRAMPercentage - sets maximum heap size as percentage of total system memory
# HeapDumpOnOutOfMemoryError - generate heap dump in case of OOM
# Increased to 70% for BuildKite environments to handle native library stripping
# UseParallelGC - enables parallel garbage collection, which is generally more efficient
org.gradle.jvmargs=-XX:MaxRAMPercentage=70 -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC

org.gradle.caching=true
org.gradle.configureondemand=true
org.gradle.configuration-cache=true
org.gradle.unsafe.configuration-cache.quiet=true
org.gradle.vfs.watch=true
org.gradle.parallel=true
android.useAndroidX=true
android.enableJetifier=false
android.nonTransitiveRClass=true
android.uniquePackageNames=true
kotlin.code.style=official
kotlin.useKsp2=true
# Disable default hierarchy template for KMP modules. We use our own custom hierarchy template.
# There's also a performance bug in the default hierarchy template where IDE does a lot of extra work for unused, default
# source sets causing higher heap usage and slower sync times.
# https://kotlinlang.slack.com/archives/C19FD9681/p1726492531094229?thread_ts=1726232905.632669&cid=C19FD9681
kotlin.mpp.applyDefaultHierarchyTemplate=false
kotlin.mpp.stability.nowarn=true
kotlin.mpp.enableCInteropCommonization=true
kotlin.native.binary.objcExportSuspendFunctionLaunchThreadRestriction=none
kotlin.incremental.native=true
org.jetbrains.compose.experimental.jscanvas.enabled=false

# Disable warnings about disabled targets (for example that iOS targets can't be built when we are running on Linux - expected)
kotlin.native.ignoreDisabledTargets=true

# Determine if shared XC Framework should skip building binaries for real iOS device or simulator.
# This allows to speed up local compilation of shared code when targetting only simulator or only real device.
# Can't set both to `true`.
build.wallet.kmp.iosSkipSimulator=false
build.wallet.kmp.iosSkipRealDevice=false

# Set to 'false' to disable Gradle dependency locking
build.wallet.dependency-locking.is-enabled=true

# If true, will use `-Xprofile-phases` kotlin compiler flag
build.wallet.ksp.enableProfiler=false